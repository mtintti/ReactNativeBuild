workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 30
    instance_type: mac_mini_m2
    environment:
      java: 17
      node: latest # onkohan tämä tarpeellinen?
      groups:
        - firebase
        - apikeys # weather ja currency
        - permissions #keystore ja gcloud service account key
        - email # build ilmoitusten sähköpostit
      vars:
        PACKAGE_NAME: "com.kouluprojekti.MobiiliProjekti"
#        EXPO_PUBLIC_API_KEY: $EXPO_PUBLIC_API_KEY
#        EXPO_PUBLIC_AUTH_DOMAIN: $EXPO_PUBLIC_AUTH_DOMAIN
#        EXPO_PUBLIC_PROJECT_ID: $EXPO_PUBLIC_PROJECT_ID
#        EXPO_PUBLIC_STORAGE_BUCKET: $EXPO_PUBLIC_STORAGE_BUCKET
#        EXPO_PUBLIC_MESSAGING_SENDER_ID: $EXPO_PUBLIC_MESSAGING_SENDER_ID
#        EXPO_PUBLIC_APP_ID: $EXPO_PUBLIC_APP_ID

   # triggering:
   #   events:
   #     - push
   #     - tag
   #     - pull_request
   #   branch_patterns:
   #     - pattern: main
   #       include: true
   #       source: true


    scripts:
        # EXPO_PUBLIC_ -alkuiset muuttujat tulee sijoittaa .env tiedostoon ennen prebuildia
      - name: Expo public environment variables
        script: | 
          echo "FIREBASE_API_KEY=$FIREBASE_API_KEY" >> $CM_BUILD_DIR/.env
          echo "FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> $CM_BUILD_DIR/.env
          echo "FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> $CM_BUILD_DIR/.env
          echo "FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> $CM_BUILD_DIR/.env
          echo "FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> $CM_BUILD_DIR/.env
          echo "FIREBASE_APP_ID=$FIREBASE_APP_ID" >> $CM_BUILD_DIR/.env
          echo "CURRENCY_API_KEY=$CURRENCY_API_KEY" >> $CM_BUILD_DIR/.env
          echo "WEATHER_CURRENCY_KEY=$WEATHER_CURRENCY_KEY" >> $CM_BUILD_DIR/.env
      - name: Install npm dependencies
        script: | 
          npm install
      - name: Run Expo Prebuild
        script: | 
          npx expo prebuild
      - name: Set Android SDK location
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Set up app/build.gradle
        script: | 
          mv ./support-files/build.gradle android/app
#      - name: pre_build_script
        # ANDROID_FIREBASE_SECRET sisältää google-services.json tiedoston joka on oikeasti uploadausta
#        script: | 
          #!/usr/bin/env sh
#          set -e # exit on first failed command
#          echo $GOOGLE_SERVICE_JSON | base64 --decode > $CM_BUILD_DIR/android/app/google-services.json
        # keystoresta haetaan upload key jolla signataan bundle
      - name: Set up keystore
        script: |
          echo $KEYSTORE | base64 --decode > /tmp/keystore.keystore
          # The following script creates key.properties file and stores the credentials in it.
          # 
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$KEYSTORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=$KEY_ALIAS_USERNAME
          storeFile=/tmp/keystore.keystore
          EOF
      - name: Debugging environment
        script: |    
          echo "Display env file"
          cat $CM_BUILD_DIR/.env
          echo "Displaying key.properties contents:"
          cat "$FCI_BUILD_DIR/android/key.properties" || echo "Error: Unable to display key.properties"
          echo "Listing contents of /tmp directory:"
          ls -la /tmp || echo "Error: Unable to list /tmp directory"
          echo "Displaying keystore details:"
          ls -la /tmp/keystore.keystore || echo "Error: keystore file not found"
          echo "displaying FCI_BUILD_DIR"
          echo $FCI_BUILD_DIR
          echo "displaying CM_BUILD_DIR"
          echo $CM_BUILD_DIR
      - name: Build Android release
        script: | 
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
              # fallback in case no build number was found from google play. Alternatively, you can `exit 1` to fail the build
              UPDATED_BUILD_NUMBER=$BUILD_NUMBER
              echo "no build number found from google play"
              #exit 1
          else
              UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd android
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
    #build.gradle tiedostoa varten versionumero

    artifacts:
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - $JARNO_POSTI
        notify:
          success: true
          failure: true
#      google_play:
#        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
#        track: internal
#        submit_as_draft: true